apiVersion: v1
kind: Service
metadata:
  name: test-postgres
spec:
  selector:
    app: test-postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-postgres
spec:
  replicas: 1
  template:
    metadata:
      name: test-postgres
      labels:
        app: test-postgres
    spec:
      containers:
        - name: postgresql
          image: postgres:12.0
          env:
            - name: POSTGRES_DB
              value: zevatest
            - name: POSTGRES_USER
              value: zeva
            - name: POSTGRES_PASSWORD
              value: zevadev
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command: ["psql", "-w", "-U", "zeva", "-d", "zevatest", "-c", "SELECT 1"]
            initialDelaySeconds: 1
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["psql", "-w", "-U", "zeva", "-d", "zevatest", "-c", "SELECT 1"]
            initialDelaySeconds: 45
            timeoutSeconds: 2
  selector:
    matchLabels:
      app: test-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-test-backend
spec:
  replicas: 1
  minReadySeconds: 20
  template:
    metadata:
      name: python-test-backend-pod
      labels:
        app: python-test-backend
    spec:
      containers:
        - name: python-test-backend
          image: python-backend
          command: ["sh", "-c", "alembic upgrade head && python3 test.py"]
          env:
            - name: DATABASE_URL
              value: 'postgresql://zeva:zevadev@test-postgres/zevatest'
            - name: LOAD_TEST_FIXTURES
              value: 'True'
      initContainers:
        - name: init-psql
          image: busybox
          command: ['sh', '-c', 'until (nslookup test-postgres > /dev/null); do echo waiting for test-postgres; sleep 1; done; echo test-postgres ready; sleep 1;']
  selector:
    matchLabels:
      app: python-test-backend
