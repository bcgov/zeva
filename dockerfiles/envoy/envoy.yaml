admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 10000 }
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                upgrade_configs:
                  - upgrade_type: "websocket"
                    enabled: true
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/api/" }
                          route:
                            cluster: django
                        - match: { prefix: "/sockjs-node/" }
                          route:
                            cluster: frontend
                        - match: { prefix: "/socket.io/" }
                          route:
                            cluster: frontend-notifications
                        - match: { prefix: "/" }
                          route: { cluster: frontend }
                http_filters:
                - name: envoy.router
    - name: listener_1
      address:
        socket_address: { address: 0.0.0.0, port_value: 8888 }
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      cors:
                        allow_origin_regex:
                          - "https?:\\/\\/localhost:\\d+"
                        allow_methods: GET, PUT, DELETE, POST, PATCH, OPTIONS
                        allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web
                        expose_headers: grpc-status,grpc-message,x-envoy-upstream-service-time
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: keycloak }
                http_filters:
                  - name: envoy.cors
                  - name: envoy.router
  clusters:
    - name: keycloak
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      hosts:
        - socket_address:
            address: keycloak
            port_value: 8080
    - name: frontend
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      hosts:
      - socket_address:
          address: frontend
          port_value: 5001
    - name: frontend-notifications
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      hosts:
        - socket_address:
            address: frontend
            port_value: 5002
    - name: django
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      upstream_connection_options:
        tcp_keepalive:
          keepalive_time: 300
      hosts:
        - socket_address:
            address: django-backend
            port_value: 10102
