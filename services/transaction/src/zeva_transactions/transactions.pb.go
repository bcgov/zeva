// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transactions.proto

package zeva_transactions

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransactionType int32

const (
	TransactionType_VALIDATION TransactionType = 0
	TransactionType_REDUCTION  TransactionType = 1
	TransactionType_SOLD       TransactionType = 2
	TransactionType_BOUGHT     TransactionType = 3
)

var TransactionType_name = map[int32]string{
	0: "VALIDATION",
	1: "REDUCTION",
	2: "SOLD",
	3: "BOUGHT",
}

var TransactionType_value = map[string]int32{
	"VALIDATION": 0,
	"REDUCTION":  1,
	"SOLD":       2,
	"BOUGHT":     3,
}

func (x TransactionType) String() string {
	return proto.EnumName(TransactionType_name, int32(x))
}

func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b72849cf10e9c77, []int{0}
}

type DollarValue struct {
	Cents                uint64   `protobuf:"varint,1,opt,name=cents,proto3" json:"cents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DollarValue) Reset()         { *m = DollarValue{} }
func (m *DollarValue) String() string { return proto.CompactTextString(m) }
func (*DollarValue) ProtoMessage()    {}
func (*DollarValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b72849cf10e9c77, []int{0}
}

func (m *DollarValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DollarValue.Unmarshal(m, b)
}
func (m *DollarValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DollarValue.Marshal(b, m, deterministic)
}
func (m *DollarValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DollarValue.Merge(m, src)
}
func (m *DollarValue) XXX_Size() int {
	return xxx_messageInfo_DollarValue.Size(m)
}
func (m *DollarValue) XXX_DiscardUnknown() {
	xxx_messageInfo_DollarValue.DiscardUnknown(m)
}

var xxx_messageInfo_DollarValue proto.InternalMessageInfo

func (m *DollarValue) GetCents() uint64 {
	if m != nil {
		return m.Cents
	}
	return 0
}

type CreditValue struct {
	Credits              uint64   `protobuf:"varint,1,opt,name=credits,proto3" json:"credits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditValue) Reset()         { *m = CreditValue{} }
func (m *CreditValue) String() string { return proto.CompactTextString(m) }
func (*CreditValue) ProtoMessage()    {}
func (*CreditValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b72849cf10e9c77, []int{1}
}

func (m *CreditValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditValue.Unmarshal(m, b)
}
func (m *CreditValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditValue.Marshal(b, m, deterministic)
}
func (m *CreditValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditValue.Merge(m, src)
}
func (m *CreditValue) XXX_Size() int {
	return xxx_messageInfo_CreditValue.Size(m)
}
func (m *CreditValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditValue.DiscardUnknown(m)
}

var xxx_messageInfo_CreditValue proto.InternalMessageInfo

func (m *CreditValue) GetCredits() uint64 {
	if m != nil {
		return m.Credits
	}
	return 0
}

type TransactionListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionListRequest) Reset()         { *m = TransactionListRequest{} }
func (m *TransactionListRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionListRequest) ProtoMessage()    {}
func (*TransactionListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b72849cf10e9c77, []int{2}
}

func (m *TransactionListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionListRequest.Unmarshal(m, b)
}
func (m *TransactionListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionListRequest.Marshal(b, m, deterministic)
}
func (m *TransactionListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionListRequest.Merge(m, src)
}
func (m *TransactionListRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionListRequest.Size(m)
}
func (m *TransactionListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionListRequest proto.InternalMessageInfo

type TransactionSummary struct {
	Id                   uint64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 TransactionType `protobuf:"varint,2,opt,name=type,proto3,enum=zeva.transactions.TransactionType" json:"type,omitempty"`
	Amount               *DollarValue    `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Credits              *CreditValue    `protobuf:"bytes,4,opt,name=credits,proto3" json:"credits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TransactionSummary) Reset()         { *m = TransactionSummary{} }
func (m *TransactionSummary) String() string { return proto.CompactTextString(m) }
func (*TransactionSummary) ProtoMessage()    {}
func (*TransactionSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b72849cf10e9c77, []int{3}
}

func (m *TransactionSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionSummary.Unmarshal(m, b)
}
func (m *TransactionSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionSummary.Marshal(b, m, deterministic)
}
func (m *TransactionSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionSummary.Merge(m, src)
}
func (m *TransactionSummary) XXX_Size() int {
	return xxx_messageInfo_TransactionSummary.Size(m)
}
func (m *TransactionSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionSummary.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionSummary proto.InternalMessageInfo

func (m *TransactionSummary) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TransactionSummary) GetType() TransactionType {
	if m != nil {
		return m.Type
	}
	return TransactionType_VALIDATION
}

func (m *TransactionSummary) GetAmount() *DollarValue {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *TransactionSummary) GetCredits() *CreditValue {
	if m != nil {
		return m.Credits
	}
	return nil
}

func init() {
	proto.RegisterEnum("zeva.transactions.TransactionType", TransactionType_name, TransactionType_value)
	proto.RegisterType((*DollarValue)(nil), "zeva.transactions.DollarValue")
	proto.RegisterType((*CreditValue)(nil), "zeva.transactions.CreditValue")
	proto.RegisterType((*TransactionListRequest)(nil), "zeva.transactions.TransactionListRequest")
	proto.RegisterType((*TransactionSummary)(nil), "zeva.transactions.TransactionSummary")
}

func init() { proto.RegisterFile("transactions.proto", fileDescriptor_0b72849cf10e9c77) }

var fileDescriptor_0b72849cf10e9c77 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xdd, 0x34, 0x56, 0x9d, 0x62, 0x5b, 0x07, 0x91, 0xe0, 0x41, 0x4a, 0x44, 0x8c, 0x1e,
	0x82, 0x44, 0x28, 0x5e, 0x6b, 0xa3, 0xb5, 0x10, 0x0c, 0xa4, 0x69, 0xef, 0x6b, 0xb2, 0x87, 0x40,
	0xfe, 0x99, 0xdd, 0x88, 0xf1, 0x43, 0xfa, 0x99, 0xc4, 0x34, 0xb5, 0xeb, 0xbf, 0x1e, 0xdf, 0xce,
	0x6f, 0x1e, 0xf3, 0x1e, 0x0b, 0x28, 0x0a, 0x9a, 0x72, 0x1a, 0x88, 0x28, 0x4b, 0xb9, 0x99, 0x17,
	0x99, 0xc8, 0xf0, 0xe0, 0x8d, 0xbd, 0x50, 0x53, 0x1e, 0xe8, 0xa7, 0xd0, 0xb1, 0xb3, 0x38, 0xa6,
	0xc5, 0x82, 0xc6, 0x25, 0xc3, 0x43, 0xd8, 0x0e, 0x58, 0x2a, 0xb8, 0x46, 0x06, 0xc4, 0x50, 0xbd,
	0xa5, 0xd0, 0xcf, 0xa1, 0x33, 0x2e, 0x58, 0x18, 0x89, 0x25, 0xa4, 0xc1, 0x4e, 0x50, 0xcb, 0x15,
	0xb6, 0x92, 0xba, 0x06, 0x47, 0xfe, 0xda, 0xdd, 0x89, 0xb8, 0xf0, 0xd8, 0x73, 0xc9, 0xb8, 0xd0,
	0xdf, 0x09, 0xa0, 0x34, 0x9a, 0x95, 0x49, 0x42, 0x8b, 0x0a, 0xbb, 0xa0, 0x44, 0x61, 0xe3, 0xa2,
	0x44, 0x21, 0x0e, 0x41, 0x15, 0x55, 0xce, 0x34, 0x65, 0x40, 0x8c, 0xae, 0xa5, 0x9b, 0xbf, 0x0e,
	0x36, 0x25, 0x13, 0xbf, 0xca, 0x99, 0x57, 0xf3, 0x38, 0x84, 0x36, 0x4d, 0xb2, 0x32, 0x15, 0x5a,
	0x6b, 0x40, 0x8c, 0x8e, 0x75, 0xf2, 0xc7, 0xa6, 0x94, 0xd3, 0x6b, 0x68, 0xbc, 0x59, 0x47, 0x51,
	0xff, 0x5d, 0x94, 0xb2, 0x7f, 0x45, 0xbd, 0xbc, 0x87, 0xde, 0x8f, 0x53, 0xb0, 0x0b, 0xb0, 0x18,
	0x39, 0x53, 0x7b, 0xe4, 0x4f, 0xdd, 0xc7, 0xfe, 0x16, 0xee, 0xc3, 0x9e, 0x77, 0x67, 0xcf, 0xc7,
	0xb5, 0x24, 0xb8, 0x0b, 0xea, 0xcc, 0x75, 0xec, 0xbe, 0x82, 0x00, 0xed, 0x5b, 0x77, 0x3e, 0x79,
	0xf0, 0xfb, 0x2d, 0xeb, 0xf5, 0x9b, 0xcf, 0x67, 0x65, 0xc8, 0xa0, 0x37, 0x61, 0x42, 0x7a, 0xe5,
	0x78, 0xb1, 0xb9, 0x09, 0xa9, 0xe9, 0xe3, 0xb3, 0xcd, 0x68, 0xd3, 0xfc, 0x15, 0x79, 0x6a, 0xd7,
	0x9f, 0xe2, 0xfa, 0x23, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xdc, 0xbf, 0xa5, 0x2a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionListClient is the client API for TransactionList service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionListClient interface {
	GetTransactions(ctx context.Context, in *TransactionListRequest, opts ...grpc.CallOption) (TransactionList_GetTransactionsClient, error)
}

type transactionListClient struct {
	cc *grpc.ClientConn
}

func NewTransactionListClient(cc *grpc.ClientConn) TransactionListClient {
	return &transactionListClient{cc}
}

func (c *transactionListClient) GetTransactions(ctx context.Context, in *TransactionListRequest, opts ...grpc.CallOption) (TransactionList_GetTransactionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TransactionList_serviceDesc.Streams[0], "/zeva.transactions.TransactionList/GetTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &transactionListGetTransactionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TransactionList_GetTransactionsClient interface {
	Recv() (*TransactionSummary, error)
	grpc.ClientStream
}

type transactionListGetTransactionsClient struct {
	grpc.ClientStream
}

func (x *transactionListGetTransactionsClient) Recv() (*TransactionSummary, error) {
	m := new(TransactionSummary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TransactionListServer is the server API for TransactionList service.
type TransactionListServer interface {
	GetTransactions(*TransactionListRequest, TransactionList_GetTransactionsServer) error
}

// UnimplementedTransactionListServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionListServer struct {
}

func (*UnimplementedTransactionListServer) GetTransactions(req *TransactionListRequest, srv TransactionList_GetTransactionsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTransactions not implemented")
}

func RegisterTransactionListServer(s *grpc.Server, srv TransactionListServer) {
	s.RegisterService(&_TransactionList_serviceDesc, srv)
}

func _TransactionList_GetTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TransactionListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TransactionListServer).GetTransactions(m, &transactionListGetTransactionsServer{stream})
}

type TransactionList_GetTransactionsServer interface {
	Send(*TransactionSummary) error
	grpc.ServerStream
}

type transactionListGetTransactionsServer struct {
	grpc.ServerStream
}

func (x *transactionListGetTransactionsServer) Send(m *TransactionSummary) error {
	return x.ServerStream.SendMsg(m)
}

var _TransactionList_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zeva.transactions.TransactionList",
	HandlerType: (*TransactionListServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTransactions",
			Handler:       _TransactionList_GetTransactions_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "transactions.proto",
}
