apiVersion: v1
kind: Service
metadata:
  name: django-backend
spec:
  selector:
    app: django-backend
  ports:
    - port: 10102
      targetPort: 10102
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-backend
spec:
  replicas: 1
  minReadySeconds: 20
  template:
    metadata:
      name: django-backend-pod
      labels:
        app: django-backend
    spec:
      containers:
        - name: django-backend
          image: django-backend
          ports:
            - containerPort: 10102
          env:
            - name: DATABASE_NAME
              value: 'zeva'
            - name: DATABASE_USER
              value: 'zeva'
            - name: DATABASE_PASSWORD
              value: 'zevadev'
            - name: DATABASE_ENGINE
              value: 'postgresql'
            - name: DATABASE_SERVICE_NAME
              value: 'postgresql'
            - name: POSTGRESQL_SERVICE_HOST
              value: 'postgres'
            - name: POSTGRESQL_SERVICE_PORT
              value: '5432'
            - name: KEYCLOAK_CERTS_URL
              value: 'https://dev.loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect/certs'
            - name: KEYCLOAK_REALM
              value: 'https://dev.loginproxy.gov.bc.ca/auth/realms/standard'
            - name: KEYCLOAK_AUTHORITY
              value: 'https://dev.loginproxy.gov.bc.ca/auth/realms/standard'
            - name: KEYCLOAK_ISSUER
              value: 'https://dev.loginproxy.gov.bc.ca/auth/realms/standard'
            - name: KEYCLOAK_AUDIENCE
              value: 'zeva-on-gold-4543'
            - name: KEYCLOAK_CLIENT_ID
              value: 'zeva-on-gold-4543'
            - name: DJANGO_DEBUG
              value: 'True'
            - name: RABBITMQ_VHOST
              value: '/zeva'
            - name: RABBITMQ_USER
              value: 'rabbitmq'
            - name: RABBITMQ_PASSWORD
              value: 'rabbitmq'
            - name: RABBITMQ_HOST
              value: 'rabbit'
            - name: RABBITMQ_PORT
              value: '5672'
      initContainers:
        - name: init-psql
          image: busybox:1.28
          command: ['sh', '-c', 'until nslookup postgres; do echo waiting for postgres; sleep 5; done;']
  selector:
    matchLabels:
      app: django-backend
