apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: envoy
parameters:
  - name: NAME
    displayName:
    description: the module name entered when run yo bcdk:pipeline, which is zeva
    required: true
  - name: SUFFIX
    displayName:
    description: sample is -pr-0
    required: true
  - name: VERSION
    displayName:
    description:  image tag name for output
    required: true
  - name: ENV_NAME
    displayName: Environment Name
    description: Environment Name
    required: true
  - name: CPU_REQUEST
    displayName: Requested CPU
    description: Requested CPU
    required: true
  - name: CPU_LIMIT
    displayName: CPU upper limit
    description: CPU upper limit
    required: true
  - name: MEMORY_REQUEST
    displayName: Requested memory
    description: Requested memory
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory upper limit
    description: Memory upper limit
    required: true
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the envoy image
    labels:
      shared: "true"
    creationTimestamp: null
    name: ${NAME}-envoy
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}-envoy${SUFFIX}
    labels:
      name: envoy
      app: zeva
      role: envoy
      env: ${ENV_NAME}
  spec:
    ports:
    - name: http-in
      port: 10000
      targetPort: 10000
    - name: admin
      port: 9901
      targetPort: 9901
    - name: keycloak-in
      port: 8888
      targetPort: 8888
    selector:
      name: ${NAME}-envoy${SUFFIX}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}-envoy${SUFFIX}
    labels:
      name: envoy
      app: zeva
      role: envoy
      env: ${ENV_NAME}
    annotations:
      description: Defines how to deploy the envoy application
    creationTimestamp: null
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentConfig: ${NAME}-envoy${SUFFIX}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources:
        limits:
          cpu: 300m
          memory: 500M
        requests:
          cpu: 100m
          memory: 200M
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${NAME}-envoy${SUFFIX}
      spec:
        containers:
          - image:
            imagePullPolicy: IfNotPresent
            livenessProbe:
              failureThreshold: 3
              initialDelaySeconds: 40
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 10000
              timeoutSeconds: 3
            name: envoy
            ports:
              - containerPort: 9901
                name: admin
                protocol: TCP
              - containerPort: 10000
                name: http-in
                protocol: TCP
              - containerPort: 8888
                name: keycloak-in
                protocol: TCP
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 10000
              timeoutSeconds: 3
            resources:
              limits:
                cpu: 300m
                memory: 500M
              requests:
                cpu: 100m
                memory: 200M
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - envoy
          from:
            kind: ImageStreamTag
            name: ${NAME}-envoy:${VERSION}
          lastTriggeredImage:
        type: ImageChange
      - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
