---
kind: Template
apiVersion: v1
metadata:
  name: rabbitmq-dc
  creationTimestamp:
parameters:
  - name: ENV_NAME
    required: true
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: rabbitmq
      creationTimestamp:
    spec:
      ports:
        - name: amqp
          protocol: TCP
          port: 5672
          targetPort: 5672
        - name: management-web
          protocol: TCP
          port: 15672
          targetPort: 15672
      selector:
        app: rabbitmq
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}
  - kind: Route
    apiVersion: v1
    metadata:
      name: rabbitmq
      creationTimestamp:
      annotations:
        openshift.io/host.generated: 'true'
    spec:
      host: rabbitmq-zeva-${ENV_NAME}.pathfinder.gov.bc.ca
      to:
        kind: Service
        name: rabbitmq
        weight: 100
      port:
        targetPort: management-web
      tls:
        termination: edge
      wildcardPolicy: None
    status: {}
  - kind: StatefulSet
    apiVersion: apps/v1
    metadata:
      name: rabbitmq
      creationTimestamp:
      labels:
        template: zeva-app-environment
      annotations:
        description: Deploys a RabbitMQ instance within a TFRS environment
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: rabbitmq
      template:
        metadata:
          creationTimestamp:
          labels:
            app: rabbitmq
        spec:
          containers:
            - name: rabbitmq
              image: docker-registry.default.svc:5000/tbiwaq-${ENV_NAME}/rabbitmq:${ENV_NAME}
              command:
                - rabbitmq-server
              ports:
                - name: web-management
                  containerPort: 15672
                  protocol: TCP
                - name: amqp
                  containerPort: 5672
                  protocol: TCP
              resources:
                limits:
                  cpu: 500m
                  memory: 2Gi
                requests:
                  cpu: 100m
                  memory: 512Mi
              volumeMounts:
                - name: rabbitmq
                  mountPath: "/var/lib/rabbitmq"
              readinessProbe:
                tcpSocket:
                  port: 5672
                initialDelaySeconds: 90
                timeoutSeconds: 3
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: "/dev/termination-log"
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
      volumeClaimTemplates:
        - metadata:
            name: rabbitmq
            creationTimestamp:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 512Mi
          status:
            phase: Pending
      serviceName: ''
    status: {}
