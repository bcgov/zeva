apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: python-backend-dc
parameters:
  - name: ENV_NAME
    value: dev
    displayName: Environment name
    description: Environment name, dev, test and prod
    required: true
  - name: DASH_ENV_NAME
    value: dev
    displayName: Environment name
    description: Environment name, -dev, -test and empty for prod
    required: true
  - name: CPU_REQUEST
    displayName: Requested CPU
    description: Requested CPU
    required: true
  - name: CPU_LIMIT
    displayName: CPU upper limit
    description: CPU upper limit
    required: true
  - name: MEMORY_REQUEST
    displayName: Requested memory
    description: Requested memory
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory upper limit
    description: Memory upper limit
    required: true
  - name: POSTGRESQL_USER
    displayName: Postgresql database user
    description: Postgresql database user
    required: true
  - name: POSTGRESQL_PASSWORD
    displayName: Postgresql database password
    description: Postgresql database password
    required: true
  - name: OCP_NAME
    displayName: Openshift Name
    description: Openshift Name
    required: true    
objects:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: python-backend
    labels:
      name: python-backend
      app: zeva
      role: python-backend
      env: ${ENV_NAME}
  spec:
    ports:
    - name: python-backend
      port: 10102
      protocol: TCP
      targetPort: 10102
    selector:
      name: python-backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: python-backend
    labels:
      name: python-backend
      app: zeva
      role: python-backend
      env: ${ENV_NAME}
    annotations:
      description: Defines how to deploy the python-backend application
    creationTimestamp: null
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: python-backend
    strategy:
      activeDeadlineSeconds: 1200
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: python-backend
        name: python-backend
      spec:
        containers:
        - env:
            - name: DATABASE_URL
              value: "postgresql://${POSTGRESQL_USER}:${POSTGRESQL_PASSWORD}@postgresql.tbiwaq-${ENV_NAME}.svc.cluster.local/zeva"
            - name: KEYCLOAK_CERTS_URL
              value: "https://sso${DASH_ENV_NAME}.${OCP_NAME}.gov.bc.ca/auth/realms/rzh2zkjq/protocol/openid-connect/certs"
            - name: KEYCLOAK_REALM
              value: "https://sso${DASH_ENV_NAME}.${OCP_NAME}.gov.bc.ca/auth/realms/rzh2zkjq"
            - name: KEYCLOAK_AUTHORITY
              value: "https://sso${DASH_ENV_NAME}.${OCP_NAME}.gov.bc.ca/auth/realms/rzh2zkjq"
            - name: KEYCLOAK_ISSUER
              value: "https://sso${DASH_ENV_NAME}.${OCP_NAME}.gov.bc.ca/auth/realms/rzh2zkjq"
            - name: KEYCLOAK_AUDIENCE
              value: 'rzh2zkjq'
            - name: KEYCLOAK_CLIENT_ID
              value: 'rzh2zkjq'
          image:
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 10102
            timeoutSeconds: 10
          name: python-backend
          ports:
          - containerPort: 10102
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 10102
            timeoutSeconds: 10
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - python-backend
        from:
          kind: ImageStreamTag
          name: python-backend:${ENV_NAME}
          namespace: tbiwaq-tools
        lastTriggeredImage:
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
