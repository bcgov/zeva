---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: schemaspy-dc
  creationTimestamp:
parameters:
  - name: SUFFIX
    displayName: suffic
    description: env name plus pr number, sample is -dev-120
    required: true   
  - name: ENV_NAME
    value: dev
    displayName: Environment name
    description: 'Environment name, dev, test and prod'
    required: true     
  - name: CPU_REQUEST
    displayName: Requested CPU
    description: Requested CPU
    required: true
    value: '20m'
  - name: CPU_LIMIT
    displayName: CPU upper limit
    description: CPU upper limit
    required: true
    value: '1000m'
  - name: MEMORY_REQUEST
    displayName: Requested memory
    description: Requested memory
    required: true
    value: '250M'
  - name: MEMORY_LIMIT
    displayName: Memory upper limit
    description: Memory upper limit
    required: true
    value: '1500M'    
  - name: HEALTH_CHECK_DELAY
    value: '150'
    displayName: 
    description: readyness and liveness initial delay seconds
    required: true     
objects:
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: schemaspy-public${SUFFIX}
      creationTimestamp:
      annotations:
        description: Defines how to deploy the container.
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 1100
        resources: {}
        activeDeadlineSeconds: 1200
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - schemaspy-public
            from:
              kind: ImageStreamTag
              namespace: tbiwaq-tools
              name: schemaspy:prod
            lastTriggeredImage:
        - type: ConfigChange
      replicas: 1
      test: false
      selector:
        name: schemaspy-public${SUFFIX}
      template:
        metadata:
          name: schemaspy-public${SUFFIX}
          creationTimestamp:
          labels:
            name: schemaspy-public${SUFFIX}
        spec:
          initContainers:
            - name: wait-for-database
              image: toschneck/wait-for-it:latest
              command: ['sh', '-c', './wait-for-it.sh -t 0 zeva-backend${SUFFIX}.tbiwaq-${ENV_NAME}.svc.cluster.local:8080']
#             command: ['sh', '-c', './wait-for-it.sh -t 0 patroni-master${SUFFIX}.tbiwaq-${ENV_NAME}.svc.cluster.local:5432']
          containers:
            - name: schemaspy-public
              image:
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: DATABASE_SERVICE_NAME
                  value:  patroni-master${SUFFIX}
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: app-db-name
                      name: patroni${SUFFIX}
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: app-db-username
                      name: patroni${SUFFIX}
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: app-db-password
                      name: patroni${SUFFIX}
                - name: SCHEMASPY_ARGUMENTS
                  value: -desc zeva-${SUFFIX}
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              livenessProbe:
                httpGet:
                  path: "/"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: ${{HEALTH_CHECK_DELAY}}
                timeoutSeconds: 3
                periodSeconds: 15
                successThreshold: 1
                failureThreshold: 70
              readinessProbe:
                httpGet:
                  path: "/"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: ${{HEALTH_CHECK_DELAY}}
                timeoutSeconds: 3
                periodSeconds: 15
                successThreshold: 1
                failureThreshold: 70
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
    status:
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      updatedReplicas: 0
      availableReplicas: 0
      unavailableReplicas: 0
  - kind: Service
    apiVersion: v1
    metadata:
      name: schemaspy-public${SUFFIX}
      creationTimestamp:
      annotations:
        description: Exposes and load balances the application pods
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        name: schemaspy-public${SUFFIX}
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: schemaspy-public${SUFFIX}
      creationTimestamp:
    spec:
      host: schemaspy-public${SUFFIX}.pathfinder.gov.bc.ca
      to:
        kind: Service
        name: schemaspy-public${SUFFIX}
        weight: 100
      port:
        targetPort: 8080-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Allow
      wildcardPolicy: None
    status:
