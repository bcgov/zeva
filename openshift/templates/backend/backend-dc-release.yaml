apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: backend
parameters:
  - name: ENV_NAME
    value: dev
    displayName: Environment name
    description: Environment name, dev, test and prod
    required: true
  - name: CPU_REQUEST
    displayName: Requested CPU
    description: Requested CPU
    required: true
  - name: CPU_LIMIT
    displayName: CPU upper limit
    description: CPU upper limit
    required: true
  - name: MEMORY_REQUEST
    displayName: Requested memory
    description: Requested memory
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory upper limit
    description: Memory upper limit
    required: true
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the backend image
    creationTimestamp: null
    name: backend
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: backend
    labels:
      name: backend
      app: zeva
      role: backend
      env: ${ENV_NAME}
  spec:
    ports:
      - name: backend
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      name: backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    creationTimestamp: null
    labels:
      template: backend
    name: backend
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: backend
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        mid:
          execNewPod:
            command:
            - /bin/sh
            - -c
            - python manage.py migrate;
            containerName: backend
          failurePolicy: Abort
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: backend
        name: backend
      spec:
        containers:
          - name: backend
            image:
            imagePullPolicy: IfNotPresent
            env:
              - name: DATABASE_NAME
                value: zeva
              - name: DATABASE_USER
                valueFrom:
                  secretKeyRef:
                    name: zeva-postgresql
                    key: DATABASE_USER
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: zeva-postgresql
                    key: DATABASE_PASSWORD
              - name: DATABASE_ENGINE
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: database_engine
              - name: DATABASE_SERVICE_NAME
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: database_service_name
              - name: POSTGRESQL_SERVICE_HOST
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: postgresql_service_host
              - name: POSTGRESQL_SERVICE_PORT
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: postgresql_service_port
              - name: KEYCLOAK_CERTS_URL
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_certs_url
              - name: KEYCLOAK_REALM
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_realm
              - name: KEYCLOAK_AUTHORITY
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_authority
              - name: KEYCLOAK_ISSUER
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_issuer
              - name: KEYCLOAK_AUDIENCE
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_audience
              - name: KEYCLOAK_CLIENT_ID
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_client_id
              - name: KEYCLOAK_SA_BASEURL
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_sa_baseurl
              - name: KEYCLOAK_SA_REALM
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_sa_realm
              - name: KEYCLOAK_SA_CLIENT_ID
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: keycloak_sa_client_id
              - name: KEYCLOAK_SA_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: zeva-keycloak
                    key: KEYCLOAK_SA_CLIENT_SECRET
              - name: DJANGO_DEBUG
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: django_debug
              - name: DJANGO_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: zeva-django-secret-key
                    key: DJANGO_SECRET_KEY
              - name: RABBITMQ_VHOST
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: rabbitmq_vhost
              - name: RABBITMQ_USER
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: rabbitmq_user
              - name: RABBITMQ_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: zeva-rabbitmq
                    key: ZEVA_PASSWORD
              - name: RABBITMQ_HOST
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: rabbitmq_host
              - name: RABBITMQ_PORT
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: rabbitmq_port
              - name: SMTP_SERVER_HOST
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: smtp_server_host
              - name: SMTP_SERVER_PORT
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: smtp_server_port
              - name: EMAIL_SENDING_ENABLED
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: email_sending_enabled
              - name: EMAIL_FROM_ADDRESS
                valueFrom:
                  configMapKeyRef:
                    name: zeva-config
                    key: email_from_address
              - name: APP_CONFIG
                value: /opt/app-root/src/gunicorn.cfg
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 3
            ports:
            - containerPort: 8080
              protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 3
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - backend
        from:
          kind: ImageStreamTag
          name: backend:${ENV_NAME}
          namespace: tbiwaq-${ENV_NAME}
        lastTriggeredImage:
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
