name: PR Build on Dev

on:
  pull_request:
    types: [labeled, synchronize]
    paths:
      - frontend/**
      - backend/**

env:
  GIT_URL: https://github.com/bcgov/zeva.git
  TOOLS_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-tools
  DEV_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-dev
  PR_NUMBER: ${{ github.event.pull_request.number }}
  GIT_REF: ${{ github.event.pull_request.head.ref }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-version:
    if: >
      (github.event.action == 'labeled' && github.event.label.name == 'build' && github.event.pull_request.base.ref == github.event.repository.default_branch) ||
      (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'build') && github.event.pull_request.base.ref == github.event.repository.default_branch)
    name: Retrieve version
    runs-on: ubuntu-latest

    outputs:
      output1: ${{ steps.get-version.outputs.VERSION }}

    steps:
      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - id: get-version
        run: |
          pr_deployed=$(helm -n ${{ env.DEV_NAMESPACE }} list | grep zeva-frontend-dev- | wc -l | tr -d '[:space:]')
          if [ "$pr_deployed" -gt 1 ]; then
            echo "There are at least 2 pull requests have been deployed on dev. Please uninstalled one of them in order to to have space to deploy this pull request. Exiting with code 99"
            exit 99
          else
            echo "There are $pr_deployed pull request builds on dev. Will deploy a new one."
            version=$(echo "${{ github.event.repository.default_branch }}" | sed -E 's/release-(.*)/\1/')
            echo "VERSION=$version" >> $GITHUB_OUTPUT
          fi

  build-backend:
    if: >
      (github.event.action == 'labeled' && github.event.label.name == 'build' && github.event.pull_request.base.ref == github.event.repository.default_branch) ||
      (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'build') && github.event.pull_request.base.ref == github.event.repository.default_branch)
    name: Build ZEVA Backend
    runs-on: ubuntu-latest
    needs: [get-version]
    timeout-minutes: 60

    env:
      VERSION: ${{ needs.get-version.outputs.output1 }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Build ZEVA Backend
        run: |
          cd openshift/templates/backend
          oc process -f ./backend-bc-docker.yaml NAME=zeva SUFFIX=-${{ env.VERSION }}-${{ env.PR_NUMBER }} VERSION=${{ env.VERSION }}-${{ env.PR_NUMBER }} GIT_URL=${{ env.GIT_URL }} GIT_REF=${{ env.GIT_REF }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          sleep 2s
          for build in $(oc -n ${{ env.TOOLS_NAMESPACE }} get builds -l buildconfig=zeva-backend-${{ env.VERSION }}-${{ env.PR_NUMBER }} -o jsonpath='{.items[?(@.status.phase=="Running")].metadata.name}'); do
            echo "canceling $build"
            oc -n ${{ env.TOOLS_NAMESPACE }} cancel-build $build
          done
          sleep 2s
          oc -n ${{ env.TOOLS_NAMESPACE }} start-build zeva-backend-${{ env.VERSION }}-${{ env.PR_NUMBER }} --wait=true
          sleep 2s
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-backend:${{ env.VERSION }}-${{ env.PR_NUMBER }} ${{ env.DEV_NAMESPACE }}/zeva-backend:${{ env.VERSION }}-${{ env.PR_NUMBER }}

  build-frontend:
    if: >
      (github.event.action == 'labeled' && github.event.label.name == 'build' && github.event.pull_request.base.ref == github.event.repository.default_branch) ||
      (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'build') && github.event.pull_request.base.ref == github.event.repository.default_branch)
    name: Build ZEVA Frontend
    runs-on: ubuntu-latest
    needs: [get-version]
    timeout-minutes: 60

    env:
      VERSION: ${{ needs.get-version.outputs.output1 }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Build ZEVA Frontend
        run: |
          cd openshift/templates/frontend
          oc process -f ./frontend-bc-docker.yaml NAME=zeva SUFFIX=-${{ env.VERSION }}-${{ env.PR_NUMBER }} VERSION=${{ env.VERSION }}-${{ env.PR_NUMBER }} GIT_URL=${{ env.GIT_URL }} GIT_REF=${{ env.GIT_REF }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          sleep 2s
          for build in $(oc -n ${{ env.TOOLS_NAMESPACE }} get builds -l buildconfig=zeva-frontend-${{ env.VERSION }}-${{ env.PR_NUMBER }} -o jsonpath='{.items[?(@.status.phase=="Running")].metadata.name}'); do
            echo "canceling $build"
            oc -n ${{ env.TOOLS_NAMESPACE }} cancel-build $build
          done
          sleep 2s
          oc -n ${{ env.TOOLS_NAMESPACE }} start-build zeva-frontend-${{ env.VERSION }}-${{ env.PR_NUMBER }} --wait=true
          sleep 2s
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-frontend:${{ env.VERSION }}-${{ env.PR_NUMBER }} ${{ env.DEV_NAMESPACE }}/zeva-frontend:${{ env.VERSION }}-${{ env.PR_NUMBER }}

  deploy:
    if: >
      (github.event.action == 'labeled' && github.event.label.name == 'build' && github.event.pull_request.base.ref == github.event.repository.default_branch) ||
      (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'build') && github.event.pull_request.base.ref == github.event.repository.default_branch)
    name: Deploy ZEVA
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [get-version, build-backend, build-frontend]

    env:
      VERSION: ${{ needs.get-version.outputs.output1 }}

    steps:
      - name: Checkout Manifest repository
        uses: actions/checkout@v4.1.1
        with:
          repository: bcgov-c/tenant-gitops-e52f12
          ref: main
          ssh-key: ${{ secrets.MANIFEST_REPO_DEPLOY_KEY }}

      - name: Replace VERSION in values-dev-pr.yaml
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "VERSION"
          replace: "${{ env.VERSION }}"
          include: "zeva/values-dev-pr.yaml"
          regex: false

      - name: Replace PRNUMBER in values-dev-pr.yaml
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "PRNUMBER"
          replace: "${{ env.PR_NUMBER }}"
          include: "zeva/values-dev-pr.yaml"
          regex: false

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Helm Deployment
        shell: bash {0}
        run: |
          pwd
          ls -l
          cat zeva/values-dev-pr.yaml

      - name: Helm Deployment
        shell: bash {0}
        run: |
          cd postgres-pr
          helm -n ${{ env.DEV_NAMESPACE }} -f ./values-dev-pr.yaml upgrade --install zeva-dev-${{ env.PR_NUMBER }}-postgresql oci://registry-1.docker.io/bitnamicharts/postgresql --version 15.5.17
          sleep 60s
          cd ../zeva
          helm -n ${{ env.DEV_NAMESPACE }} -f ./values-dev-pr.yaml upgrade --install zeva-dev-${{ env.PR_NUMBER }} . --set podAnnotations.rolloutTriggered="A$(date +%s)E"
