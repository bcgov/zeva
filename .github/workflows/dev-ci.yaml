## For each release, the value of workflow name, branches and VERSION need to be adjusted accordingly

name: Zeva new-pipeline-1.62.0 Dev CI

on:
  push:
    branches: [release-1.62.0]
    # paths:
    #   - frontend/**
    #   - backend/**
  workflow_dispatch:

env:
  VERSION: 1.62.0
  GIT_URL: https://github.com/bcgov/zeva.git
  TOOLS_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-tools
  DEV_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-pre-release:
    name: Calculate pre-release number
    runs-on: ubuntu-latest

    outputs:
      output1: ${{ steps.set-pre-release.outputs.PRE_RELEASE }}

    steps:
      - id: set-pre-release
        run: echo "PRE_RELEASE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

  build-backend:
    name: Build Zeva Backend
    runs-on: ubuntu-latest
    needs: set-pre-release
    timeout-minutes: 60

    env:
      PRE_RELEASE: ${{ needs.set-pre-release.outputs.output1 }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Build Zeva Backend
        run: |
          cd openshift/templates/backend
          oc process -f ./backend-bc-docker.yaml NAME=zeva SUFFIX=-${{ env.VERSION }}-${{ env.PRE_RELEASE }} VERSION=${{ env.VERSION }}-${{ env.PRE_RELEASE }} GIT_URL=${{ env.GIT_URL }} GIT_REF=release-${{ env.VERSION }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          sleep 2s
          for build in $(oc -n ${{ env.TOOLS_NAMESPACE }} get builds -l buildconfig=zeva-backend-${{ env.VERSION }}-${{ env.PRE_RELEASE }} -o jsonpath='{.items[?(@.status.phase=="Running")].metadata.name}'); do
            echo "canceling $build"
            oc -n ${{ env.TOOLS_NAMESPACE }} cancel-build $build
          done
          sleep 2s
          oc -n ${{ env.TOOLS_NAMESPACE }} start-build zeva-backend-${{ env.VERSION }}-${{ env.PRE_RELEASE }} --wait=true
          sleep 2s
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-backend:${{ env.VERSION }}-${{ env.PRE_RELEASE }} ${{ env.DEV_NAMESPACE }}/zeva-backend:${{ env.VERSION }}-${{ env.PRE_RELEASE }}

  build-frontend:
    name: Build Zeva Frontend
    runs-on: ubuntu-latest
    needs: set-pre-release
    timeout-minutes: 60

    env:
      PRE_RELEASE: ${{ needs.set-pre-release.outputs.output1 }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Build ZEVA Frontend
        run: |
          cd openshift/templates/frontend
          oc process -f ./frontend-bc-docker.yaml NAME=zeva SUFFIX=-${{ env.VERSION }}-${{ env.PRE_RELEASE }} VERSION=${{ env.VERSION }}-${{ env.PRE_RELEASE }} GIT_URL=${{ env.GIT_URL }} GIT_REF=release-${{ env.VERSION }} | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}    
          sleep 2s
          for build in $(oc -n ${{ env.TOOLS_NAMESPACE }} get builds -l buildconfig=zeva-frontend-${{ env.VERSION }}-${{ env.PRE_RELEASE }} -o jsonpath='{.items[?(@.status.phase=="Running")].metadata.name}'); do
            echo "canceling $build"
            oc -n ${{ env.TOOLS_NAMESPACE }} cancel-build $build
          done
          sleep 2s
          oc -n ${{ env.TOOLS_NAMESPACE }} start-build zeva-frontend-${{ env.VERSION }}-${{ env.PRE_RELEASE }} --wait=true
          sleep 2s
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-frontend:${{ env.VERSION }}-${{ env.PRE_RELEASE }} ${{ env.DEV_NAMESPACE }}/zeva-frontend:${{ env.VERSION }}-${{ env.PRE_RELEASE }}

  deploy:
    name: Deploy Zeva on Dev
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [set-pre-release, build-backend, build-frontend]

    env:
      PRE_RELEASE: ${{ needs.set-pre-release.outputs.output1 }}

    steps:
      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Tag backend and frontend to Dev namespace
        run: |
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-backend:${{ env.VERSION }}-${{ env.PRE_RELEASE }} ${{ env.DEV_NAMESPACE }}/zeva-backend:${{ env.VERSION }}-${{ env.PRE_RELEASE }}
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-frontend:${{ env.VERSION }}-${{ env.PRE_RELEASE }} ${{ env.DEV_NAMESPACE }}/zeva-frontend:${{ env.VERSION }}-${{ env.PRE_RELEASE }}

      - name: Checkout Manifest repository
        uses: actions/checkout@v4.1.1
        with:
          repository: bcgov-c/tenant-gitops-e52f12
          ref: main
          ssh-key: ${{ secrets.MANIFEST_REPO_DEPLOY_KEY }}

      - name: Update tags
        uses: mikefarah/yq@v4.40.5
        with:
          cmd: |
            yq -i '.frontend.image.tag = "${{ env.VERSION }}-${{ env.PRE_RELEASE }}"' zeva/values-dev.yaml
            yq -i '.backend.image.tag = "${{ env.VERSION }}-${{ env.PRE_RELEASE }}"' zeva/values-dev.yaml

      - name: GitHub Commit & Push
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add zeva/values-dev.yaml
          git commit -m "Update the image tag to ${{ env.VERSION }}-${{ env.PRE_RELEASE }} on Dev"
          git push

      - name: Deploy Zeva on Dev
        run: |
          pwd
          cd zeva
          pwd
          ls -l
          helm -n ${{ env.DEV_NAMESPACE }} -f ./values-dev.yaml upgrade --install zeva-dev .
