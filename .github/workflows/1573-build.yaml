# Please refer to ./readme.md for how to build single pull request

name: PR-1573

on:
  workflow_dispatch:

env:
  ## The pull request number of the Tracking pull request to merge the release branch to main
  PR_NUMBER: 1573
  VERSION: 1.47.0
  GIT_URL: https://github.com/bcgov/zeva.git 
  TOOLS_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-tools
  DEV_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:

  database:

    name: Start Database
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ env.PR_NUMBER }}/head

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}    

      - name: Setup Database
        shell: bash {0}
        run: |
          cd charts/zeva-spilo
          helm status -n ${{ env.DEV_NAMESPACE }} zeva-spilo-${{ env.PR_NUMBER }}
          if [ $? -eq 0 ]; then
            echo "zeva-spilo-${{ env.PR_NUMBER }} exists already"
          else
            echo "Installing zeva-spilo-${{ env.PR_NUMBER }}"
            helm install -n ${{ env.DEV_NAMESPACE }} -f ./values-dev-pr.yaml --wait zeva-spilo-${{ env.PR_NUMBER }} .
            echo "zeva-spilo-${{ env.PR_NUMBER }} installed, mounting pvc/db-backups"
            oc -n ${{ env.DEV_NAMESPACE }} set volume statefulset/zeva-spilo-${{ env.PR_NUMBER }} --add --mount-path=/db-backups -t pvc --claim-name=db-backups
            echo "pvc/db-backups has been mounted"
          fi

  build:

    name: Build ZEVA on Openshift
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: database

    steps:

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ env.PR_NUMBER }}/head

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Build ZEVA Backend
        run: |
          cd openshift/templates/backend
          oc process -f ./backend-bc.yaml NAME=zeva SUFFIX=-build-${{ env.PR_NUMBER }} VERSION=build-${{ env.VERSION }}-${{ env.PR_NUMBER }} GIT_URL=${{ env.GIT_URL }} GIT_REF=refs/pull/${{ env.PR_NUMBER }}/head | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          oc start-build --wait=true zeva-backend-build-${{ env.PR_NUMBER }}

      - name: Build ZEVA Frontend
        run: |
          cd openshift/templates/frontend
          oc process -f ./frontend-bc-docker.yaml NAME=zeva SUFFIX=-build-${{ env.PR_NUMBER }} VERSION=build-${{ env.VERSION }}-${{ env.PR_NUMBER }} GIT_URL=${{ env.GIT_URL }} GIT_REF=refs/pull/${{ env.PR_NUMBER }}/head | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          oc start-build --wait=true zeva-frontend-build-${{ env.PR_NUMBER }}

  deploy-on-dev:

    name: Deploy ZEVA on Dev
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
 
    steps:

      - name: Please confirm ZEVA database on Dev has been setup properly
        uses: trstringer/manual-approval@v1.6.0
        with:
          secret: ${{ github.TOKEN }}
          approvers: AlexZorkin,kuanfandevops,tim738745,emi-hi,JulianForeman,jig-patel,vibhiquartech
          minimum-approvals: 1
          issue-title: "Please confirm ZEVA database on Dev has been setup properly"

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ env.PR_NUMBER }}/head

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}  
      
      - name: Tag Frontend Image from tools to dev
        run: |
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-frontend:build-${{ env.VERSION }}-${{ env.PR_NUMBER }} ${{ env.DEV_NAMESPACE }}/zeva-frontend:dev-${{ env.VERSION }}-${{ env.PR_NUMBER }}
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-backend:build-${{ env.VERSION }}-${{ env.PR_NUMBER }} ${{ env.DEV_NAMESPACE }}/zeva-backend:dev-${{ env.VERSION }}-${{ env.PR_NUMBER }}

      # helm status will show an error if the helm release doesn't exist. The error will be ignored.
      - name: Deply zeva-frontend on Dev
        shell: bash {0}
        run: |
          cd charts/zeva-apps/charts/zeva-frontend
          helm status -n ${{ env.DEV_NAMESPACE }} zeva-frontend-dev-${{ env.PR_NUMBER }}
          if [ $? -eq 0 ]; then
            echo "zeva-frontend-dev-${{ env.PR_NUMBER }} release exists already"
            helm upgrade --set frontendImageTagname=dev-${{ env.VERSION }}-${{ env.PR_NUMBER }},\
              openshiftLicensePlate=${{ secrets.OPENSHIFT_NAMESPACE_PLATE }},\
              suffix=-dev-${{ env.PR_NUMBER }},\
              frontendConfigMap.apiBase=https://zeva-backend-dev-${{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca/api,\
              frontendConfigMap.keycloakCallbackUrl=https://zeva-dev-${{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca,\
              frontendConfigMap.keycloakPostLogoutUrl=https://zeva-dev-${{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca,\
              appConfigMap.backendHostName=zeva-backend-dev-{{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca \
              appConfigMap.databaseServiceName: zeva-spilo-dev-{{ env.PR_NUMBER }},\
              appConfigMap.hostName=zeva-dev-{{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca \
              -n ${{ env.DEV_NAMESPACE }} -f ./values-dev.yaml zeva-frontend-dev-${{ env.PR_NUMBER }} .
          else
            echo "zeva-frontend-dev-${{ env.PR_NUMBER }} release does not exist"
            helm install --set frontendImageTagname=dev-${{ env.VERSION }}-${{ env.PR_NUMBER }},\
              openshiftLicensePlate=${{ secrets.OPENSHIFT_NAMESPACE_PLATE }},\
              suffix=-dev-${{ env.PR_NUMBER }},\
              frontendConfigMap.apiBase=https://zeva-backend-dev-${{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca/api,\
              frontendConfigMap.keycloakCallbackUrl=https://zeva-dev-${{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca,\
              frontendConfigMap.keycloakPostLogoutUrl=https://zeva-dev-${{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca,\
              appConfigMap.backendHostName=zeva-backend-dev-{{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca \
              appConfigMap.databaseServiceName: zeva-spilo-dev-{{ env.PR_NUMBER }},\
              appConfigMap.hostName=zeva-dev-{{ env.PR_NUMBER }}.apps.silver.devops.gov.bc.ca \
              -n ${{ env.DEV_NAMESPACE }} -f ./values-dev-${{ env.PR_NUMBER }}.yaml zeva-frontend-dev-${{ env.PR_NUMBER }} .
          fi
          
      # helm status will show an error if the helm release doesn't exist. The error will be ignored.
      - name: Deply zeva-backend on Dev
        shell: bash {0}
        run: |
          cd charts/zeva-apps/charts/zeva-backend
          helm status -n ${{ env.DEV_NAMESPACE }} zeva-backend
          if [ $? -eq 0 ]; then
            echo "zeva-backend-dev-${{ env.PR_NUMBER }} release exists already"
            helm upgrade --set backendImageTagname=dev-${{ env.VERSION }}-${{ env.PR_NUMBER }},\
              suffix=-dev-${{ env.PR_NUMBER }},\
              backendRoute.hostName=zeva-backend-dev.apps.silver.devops.gov.bc.ca \
              -n ${{ env.DEV_NAMESPACE }} -f ./values-dev-${{ env.PR_NUMBER }}.yaml zeva-backend-dev-${{ env.PR_NUMBER }} .
          else
            echo "zeva-backend-dev-${{ env.PR_NUMBER }} release does not exist"
            helm install --set backendImageTagname=dev-${{ env.VERSION }}-${{ env.PR_NUMBER }} \
              suffix=-dev-${{ env.PR_NUMBER }},\
              backendRoute.hostName=zeva-backend-dev.apps.silver.devops.gov.bc.ca \
              -n ${{ env.DEV_NAMESPACE }} -f ./values-dev-${{ env.PR_NUMBER }}.yaml zeva-backend-dev-${{ env.PR_NUMBER }} .
          fi
          

      
