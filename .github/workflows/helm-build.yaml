## This pipeline is used to try replacing BCDK with Helm
## The build job uses oc command with Openshift Build Templates

name: New Frontend Build

on:
  push:
    branches: [ new-frontend-build-1.46.0 ]
  workflow_dispatch:
  workflow_call:

env:
  ## The pull request number of the Tracking pull request to merge the release branch to main
  PR_NUMBER: 1444
  RELEASE_NAME: new-frontend-build-1.46.0
  VERSION: 1.46.0
  GIT_URL: https://github.com/bcgov/zeva.git 
  TOOLS_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-tools
  DEV_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-dev
  TEST_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-test
  PROD_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-prod


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:

  ## This is the CI job
  build:

    name: Build ZEVA on Openshift
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

       - name: Build ZEVA Backend
        run: |
          cd openshift/templates/backend
          oc process -f ./backend-bc.yaml NAME=zeva SUFFIX=-build-${{ env.PR_NUMBER }} VERSION=build-${{ env.VERSION }}-${{ env.PR_NUMBER }} GIT_URL=${{ env.GIT_URL }} GIT_REF=refs/pull/${{ env.PR_NUMBER }}/head | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          oc start-build --wait=true zeva-backend-build-${{ env.PR_NUMBER }}

      - name: Build ZEVA Frontend
        run: |
          cd openshift/templates/frontend
          oc process -f ./frontend-bc-docker.yaml NAME=zeva SUFFIX=-build-${{ env.PR_NUMBER }} VERSION=build-${{ env.VERSION }}-${{ env.PR_NUMBER }} GIT_URL=${{ env.GIT_URL }} GIT_REF=refs/pull/${{ env.PR_NUMBER }}/head | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          oc start-build --wait=true zeva-frontend-build-${{ env.PR_NUMBER }}

  deploy-on-dev:

    name: Deploy ZEVA on Dev
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build
 
    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.2
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}  
      
      # remeber to change -dev/zeva-frontend:dev-${{ env.VERSION }}${{ env.PR_NUMBER }} to -dev/zeva-frontend:dev-${{ env.VERSION }}
      - name: Tag Frontend Image form tools to dev
        run: |
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-frontend:build-${{ env.VERSION }}-${{ env.PR_NUMBER }} ${{ env.DEV_NAMESPACE }}/zeva-frontend:dev-${{ env.VERSION }}-${{ env.PR_NUMBER }}
          oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-backend:build-${{ env.VERSION }}-${{ env.PR_NUMBER }} ${{ env.DEV_NAMESPACE }}/zeva-backend:dev-${{ env.VERSION }}-${{ env.PR_NUMBER }}

      # helm status will show an error if the helm release doesn't exist. The error will be ignored.
      - name: Deply zeva-frontend on Dev
        shell: bash {0}
        run: |
          cd charts/zeva-apps/charts/zeva-frontend
          helm status -n ${{ env.DEV_NAMESPACE }} zeva-frontend
          if [ $? -eq 0 ]; then
            echo "zeva-frontend release exists already"
            helm upgrade --set frontendImageTagname=dev-${{ env.VERSION }}-${{ env.PR_NUMBER }},openshiftLicensePlate=${{ secrets.OPENSHIFT_NAMESPACE_PLATE }} -n ${{ env.DEV_NAMESPACE }} -f ./values-dev.yaml zeva-frontend .
          else
            echo "zeva-frontend release does not exist"
            helm install --set frontendImageTagname=dev-${{ env.VERSION }}-${{ env.PR_NUMBER }},openshiftLicensePlate=${{ secrets.OPENSHIFT_NAMESPACE_PLATE }} -n ${{ env.DEV_NAMESPACE }} -f ./values-dev.yaml zeva-frontend .
          fi
          
      # helm status will show an error if the helm release doesn't exist. The error will be ignored.
      - name: Deply zeva-backend on Dev
        shell: bash {0}
        run: |
          cd charts/zeva-apps/charts/zeva-backend
          helm status -n ${{ env.DEV_NAMESPACE }} zeva-backend
          if [ $? -eq 0 ]; then
            echo "zeva-backend release exists already"
            helm upgrade --set backendImageTagname=dev-${{ env.VERSION }}-${{ env.PR_NUMBER }} -n ${{ env.DEV_NAMESPACE }} -f ./values-dev.yaml zeva-backend .
          else
            echo "zeva-backend release does not exist"
            helm install --set backendImageTagname=dev-${{ env.VERSION }}-${{ env.PR_NUMBER }} -n ${{ env.DEV_NAMESPACE }} -f ./values-dev.yaml zeva-backend .
          fi
          