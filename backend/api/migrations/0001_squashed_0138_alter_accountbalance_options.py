# Generated by Django 3.2.18 on 2023-04-18 16:12

import api.models.credit_agreement_statuses
import api.models.credit_agreement_transaction_types
import api.models.credit_transfer_statuses
import api.models.model_year_report_statuses
import api.models.record_of_sale_statuses
import api.models.sales_submission_statuses
import api.models.signing_authority_assertion
import api.models.vehicle_statuses
import api.models.vin_statuses
import datetime
import db_comments.model_mixins
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields
from django.core.exceptions import FieldDoesNotExist


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# api.migrations.0014_setup_auditing
# api.migrations.0023_map_records_to_submissions
# api.migrations.0030_credit_transactions_data
# api.migrations.0047_auto_20200521_1206
# api.migrations.0048_auto_20200521_1256

FILENAME = 'api/migrations/create_audit_trigger.sql'

def create_trigger(apps, schema_editor):

    if schema_editor.connection.vendor != 'postgresql':
        return

    with open(FILENAME, 'r') as file:
        sql = file.read()

        with schema_editor.connection.cursor() as cursor:
            cursor.execute(sql)


def drop_trigger(apps, schema_editor):

    if schema_editor.connection.vendor != 'postgresql':
        return

    with schema_editor.connection.cursor() as cursor:
        cursor.execute('drop schema tfrs_audit cascade;')

def map_records_to_submissions(apps, schema_editor):

    db_alias = schema_editor.connection.alias

    ros = apps.get_model('api', 'RecordOfSale')
    sub = apps.get_model('api', 'SalesSubmission')

    unmapped = ros.objects.using(db_alias).filter(
        submission=None
    )

    for r in unmapped:
        submission = sub.objects.create(
            organization=r.organization,
            submission_date=r.submission_date,
            name='Migrated Submissions {}'.format(r.id)
        )
        r.submission = submission
        r.save()

def create_initial_credit_transaction_data(apps, schema_editor):

    db_alias = schema_editor.connection.alias

    CreditClass = apps.get_model('api', 'CreditClass')
    CreditTransactionType = apps.get_model('api', 'CreditTransactionType')


    CreditClass.objects.using(db_alias).create(
        credit_class='A',
        effective_date=datetime.datetime.now(),
    )
    CreditClass.objects.using(db_alias).create(
        credit_class='B',
        effective_date=datetime.datetime.now(),
    )
    CreditTransactionType.objects.using(db_alias).create(
        transaction_type='Validation',
    )
    CreditTransactionType.objects.using(db_alias).create(
        transaction_type='Reduction',
    )


def drop_initial_credit_transaction_data(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    CreditClass = apps.get_model('api', 'CreditClass')
    CreditTransactionType = apps.get_model('api', 'CreditTransactionType')

    CreditClass.objects.using(db_alias).get(credit_class='A').delete()
    CreditClass.objects.using(db_alias).get(credit_class='B').delete()
    CreditTransactionType.objects.using(db_alias).get(transaction_type='Validation').delete()
    CreditTransactionType.objects.using(db_alias).get(transaction_type='Reduction').delete()

def convert_id_to_user(apps, schema_editor):
    """
    Fetches the username from the user_profile table and stores it under
    the new create_user and update_user columns
    """
    db_alias = schema_editor.connection.alias

    UserProfile = apps.get_model('api', 'UserProfile')

    model_list = [
        'CreditClass',
        'CreditTransaction',
        'CreditTransactionType',
        'IcbcRegistrationData',
        'IcbcVehicle',
        'ModelYear',
        'OrganizationAddress',
        'Organization',
        'Permission',
        'RecordOfSale',
        'RolePermission',
        'Role',
        'SalesSubmission',
        'UserCreationRequest',
        'UserProfile',
        'UserRole',
        'Vehicle',
        'VehicleChangeHistory',
        'ZevType'
    ]

    for item in model_list:
        model = apps.get_model('api', item)

        rows = model.objects.all()
        for row in rows:
            try:
                model._meta.get_field('create_user')

                if row.create_user_id:
                    create_user = UserProfile.objects.get(
                        id=row.create_user_id
                    )

                    row.create_user = create_user.username
            except FieldDoesNotExist:
                pass

            try:
                model._meta.get_field('update_user')

                if row.update_user_id:
                    update_user = UserProfile.objects.get(
                        id=row.update_user_id
                    )

                    row.update_user = update_user.username
            except FieldDoesNotExist:
                pass

            row.save()

def convert_user_to_id(apps, schema_editor):
    """
    After restoring the create_user_id and update_user_id columns,
    repopulate them back based on the username
    """
    db_alias = schema_editor.connection.alias

    UserProfile = apps.get_model('api', 'UserProfile')

    model_list = [
        'CreditClass',
        'CreditTransaction',
        'CreditTransactionType',
        'IcbcRegistrationData',
        'IcbcVehicle',
        'ModelYear',
        'OrganizationAddress',
        'Organization',
        'Permission',
        'RecordOfSale',
        'RolePermission',
        'Role',
        'SalesSubmission',
        'UserCreationRequest',
        'UserProfile',
        'UserRole',
        'Vehicle',
        'VehicleChangeHistory',
        'ZevType'
    ]

    for item in model_list:
        model = apps.get_model('api', item)

        rows = model.objects.all()
        for row in rows:
            try:
                model._meta.get_field('create_user')
                if row.create_user and row.create_user != 'SYSTEM':
                    create_user = UserProfile.objects.get(
                        username=row.create_user
                    )
                    row.create_user_id = create_user.id

            except FieldDoesNotExist:
                pass

            try:
                model._meta.get_field('update_user')
                if row.update_user and row.update_user != 'SYSTEM':
                    update_user = UserProfile.objects.get(
                        username=row.update_user
                    )
                    row.update_user_id = update_user.id

            except FieldDoesNotExist:
                pass

            row.save()

def do_nothing(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'organization',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(max_length=130)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_userprofile_CREATE_USER', to='api.userprofile')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.organization')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_userprofile_UPDATE_USER', to='api.userprofile')),
                ('display_name', models.CharField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'user_profile',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='organization',
            name='create_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_organization_CREATE_USER', to='api.userprofile'),
        ),
        migrations.AddField(
            model_name='organization',
            name='update_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_organization_UPDATE_USER', to='api.userprofile'),
        ),
        migrations.CreateModel(
            name='UserCreationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('keycloak_email', models.EmailField(max_length=254)),
                ('external_username', models.CharField(blank=True, max_length=150, null=True)),
                ('is_mapped', models.BooleanField(default=False)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_usercreationrequest_CREATE_USER', to='api.userprofile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_usercreationrequest_UPDATE_USER', to='api.userprofile')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='creation_request', to='api.userprofile')),
            ],
            options={
                'db_table': 'user_creation_request',
                'unique_together': {('keycloak_email', 'external_username')},
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='OrganizationAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('address_line_1', models.CharField(blank=True, max_length=500, null=True)),
                ('address_line_2', models.CharField(blank=True, max_length=100, null=True)),
                ('address_line_3', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('other', models.CharField(blank=True, max_length=100, null=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_organizationaddress_CREATE_USER', to='api.userprofile')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='api.organization')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_organizationaddress_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'organization_address',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='organization',
            name='is_government',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='organization',
            name='name',
            field=models.CharField(max_length=500, unique=True),
        ),
        migrations.CreateModel(
            name='CreditValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('class_a_credit_value', models.DecimalField(decimal_places=3, max_digits=5, null=True)),
                ('class_b_credit_value', models.DecimalField(decimal_places=3, max_digits=5, null=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_creditvalue_CREATE_USER', to='api.userprofile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_creditvalue_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'credits',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(db_column='description', max_length=250)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_make_CREATE_USER', to='api.userprofile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_make_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'make',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(db_column='description', max_length=250)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_model_CREATE_USER', to='api.userprofile')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='valid_models', to='api.make')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_model_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'model',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(db_column='description', max_length=250, unique=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_modelyear_CREATE_USER', to='api.userprofile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_modelyear_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'model_year',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Trim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(db_column='description', max_length=250)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_trim_CREATE_USER', to='api.userprofile')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='valid_trims', to='api.model')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_trim_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'trim',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(db_column='description', max_length=250)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_type_CREATE_USER', to='api.userprofile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_type_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'type',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='organization',
            name='is_active',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='organization',
            name='name',
            field=models.CharField(db_column='organization_name', max_length=500, unique=True),
        ),
        migrations.AlterModelTable(
            name='creditvalue',
            table='credit_value',
        ),
        migrations.AlterModelTable(
            name='make',
            table='vehicle_make',
        ),
        migrations.AlterModelTable(
            name='model',
            table='vehicle_model',
        ),
        migrations.AlterModelTable(
            name='trim',
            table='vehicle_trim',
        ),
        migrations.AlterModelTable(
            name='type',
            table='vehicle_type',
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('range', models.IntegerField()),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehicle_CREATE_USER', to='api.userprofile')),
                ('credit_value', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.creditvalue')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.make')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.model')),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('trim', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.trim')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehicle_UPDATE_USER', to='api.userprofile')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.type')),
                ('state', enumfields.fields.EnumField(default='NEW', enum=api.models.vehicle_statuses.VehicleDefinitionStatuses, max_length=20)),
            ],
            options={
                'db_table': 'vehicle',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='VehicleChangeHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('in_roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), size=None)),
                ('previous_state', enumfields.fields.EnumField(default='NEW', enum=api.models.vehicle_statuses.VehicleDefinitionStatuses, max_length=20)),
                ('current_state', enumfields.fields.EnumField(default='NEW', enum=api.models.vehicle_statuses.VehicleDefinitionStatuses, max_length=20)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.userprofile')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehiclechangehistory_CREATE_USER', to='api.userprofile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehiclechangehistory_UPDATE_USER', to='api.userprofile')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changelog', to='api.vehicle')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AlterModelTable(
            name='vehiclechangehistory',
            table='vehicle_change_history',
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.RunPython(
            code=create_trigger,
            reverse_code=drop_trigger,
        ),
        migrations.CreateModel(
            name='VehicleMakeOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehiclemakeorganization_CREATE_USER', to='api.userprofile')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_make_organizations', to='api.organization')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehiclemakeorganization_UPDATE_USER', to='api.userprofile')),
                ('vehicle_make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_make_organizations', to='api.make')),
            ],
            options={
                'db_table': 'vehicle_make_organization',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AlterField(
            model_name='make',
            name='name',
            field=models.CharField(db_column='description', max_length=250, unique=True),
        ),
        migrations.CreateModel(
            name='VehicleClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(db_column='description', max_length=250)),
                ('vehicle_class_code', models.CharField(max_length=3, unique=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehicleclass_CREATE_USER', to='api.userprofile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehicleclass_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'vehicle_class_code',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='FuelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(db_column='description', max_length=250)),
                ('vehicle_fuel_code', models.CharField(max_length=3, unique=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_fueltype_CREATE_USER', to='api.userprofile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_fueltype_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'vehicle_fuel_type',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_class_code',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.vehicleclass'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_fuel_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.fueltype'),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='credit_value',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='trim',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='type',
        ),
        migrations.DeleteModel(
            name='Type',
        ),
        migrations.AddField(
            model_name='vehicle',
            name='model_name',
            field=models.CharField(default='modelname', max_length=250),
            preserve_default=False,
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='model',
        ),
        migrations.RemoveField(
            model_name='model',
            name='create_user',
        ),
        migrations.RemoveField(
            model_name='model',
            name='make',
        ),
        migrations.RemoveField(
            model_name='model',
            name='update_user',
        ),
        migrations.RemoveField(
            model_name='trim',
            name='create_user',
        ),
        migrations.RemoveField(
            model_name='trim',
            name='model',
        ),
        migrations.RemoveField(
            model_name='trim',
            name='update_user',
        ),
        migrations.RenameField(
            model_name='vehicle',
            old_name='state',
            new_name='validation_status',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='actor',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='at',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='current_state',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='in_roles',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='previous_state',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='update_timestamp',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='update_user',
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='make_id',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='model_name',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='model_year_id',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='range',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='user_role',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50, null=True), null=True, size=None),
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='validation_status',
            field=enumfields.fields.EnumField(default='NEW', enum=api.models.vehicle_statuses.VehicleDefinitionStatuses, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='vehicle_class_code_id',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='vehicle_fuel_type_id',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='vehiclechangehistory',
            name='create_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history', to='api.userprofile'),
        ),
        migrations.AlterField(
            model_name='vehiclechangehistory',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='api.vehicle'),
        ),
        migrations.DeleteModel(
            name='CreditValue',
        ),
        migrations.DeleteModel(
            name='Model',
        ),
        migrations.DeleteModel(
            name='Trim',
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='validation_status',
            field=enumfields.fields.EnumField(default='DRAFT', enum=api.models.vehicle_statuses.VehicleDefinitionStatuses, max_length=20),
        ),
        migrations.CreateModel(
            name='SalesSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(db_column='description', max_length=250, unique=True)),
                ('submission_date', models.DateField(auto_now=True, null=True)),
                ('validation_status', enumfields.fields.EnumField(default='NEW', enum=api.models.sales_submission_statuses.SalesSubmissionStatuses, max_length=20)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_salessubmission_CREATE_USER', to='api.userprofile')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.organization')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_salessubmission_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'sales_submission',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='RecordOfSale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('reference_number', models.CharField(blank=True, max_length=255, null=True)),
                ('vin', models.CharField(blank=True, max_length=20, null=True)),
                ('vin_validation_status', enumfields.fields.EnumField(default='UNCHECKED', enum=api.models.vin_statuses.VINStatuses, max_length=30)),
                ('sale_date', models.DateField(blank=True, null=True)),
                ('submission_date', models.DateField(auto_now=True, null=True)),
                ('validation_status', enumfields.fields.EnumField(default='NEW', enum=api.models.record_of_sale_statuses.RecordOfSaleStatuses, max_length=20)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_recordofsale_CREATE_USER', to='api.userprofile')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='api.organization')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_recordofsale_UPDATE_USER', to='api.userprofile')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='api.vehicle')),
                ('submission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='records', to='api.salessubmission')),
            ],
            options={
                'db_table': 'record_of_sale',
                'unique_together': set(),
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.RunPython(
            code=map_records_to_submissions,
        ),
        migrations.RemoveField(
            model_name='recordofsale',
            name='organization',
        ),
        migrations.RemoveField(
            model_name='recordofsale',
            name='submission_date',
        ),
        migrations.AlterField(
            model_name='recordofsale',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='api.salessubmission'),
        ),
        migrations.AddField(
            model_name='salessubmission',
            name='submission_sequence',
            field=models.CharField(max_length=3, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='salessubmission',
            unique_together={('submission_date', 'submission_sequence', 'organization')},
        ),
        migrations.RemoveField(
            model_name='salessubmission',
            name='name',
        ),
        migrations.AddField(
            model_name='organization',
            name='short_name',
            field=models.CharField(db_column='short_name', max_length=64, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='salessubmission',
            name='submission_date',
            field=models.DateField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='salessubmission',
            name='submission_sequence',
            field=models.IntegerField(default=0, null=True),
        ),
        migrations.CreateModel(
            name='CreditClass',
            fields=[
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('credit_class', models.CharField(max_length=3, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'db_table': 'credit_class',
            },
        ),
        migrations.CreateModel(
            name='CreditTransactionType',
            fields=[
                ('transaction_type', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'db_table': 'credit_transaction_type',
            },
        ),
        migrations.CreateModel(
            name='CreditTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_credittransaction_CREATE_USER', to='api.userprofile')),
                ('credit_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.creditclass')),
                ('credit_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='credit_transactions', to='api.organization')),
                ('debit_from', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='debit_transactions', to='api.organization')),
                ('transaction_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.credittransactiontype')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_credittransaction_UPDATE_USER', to='api.userprofile')),
            ],
            options={
                'db_table': 'credit_transaction',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.RunPython(
            code=create_initial_credit_transaction_data,
            reverse_code=drop_initial_credit_transaction_data,
        ),
        migrations.RenameField(
            model_name='credittransaction',
            old_name='timestamp',
            new_name='transaction_timestamp',
        ),
        migrations.AddField(
            model_name='vehicle',
            name='credit_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.creditclass'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='credit_value',
            field=models.DecimalField(decimal_places=2, max_digits=20, null=True),
        ),
        migrations.RenameField(
            model_name='credittransaction',
            old_name='value',
            new_name='credit_value',
        ),
        migrations.AddField(
            model_name='creditclass',
            name='create_timestamp',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='creditclass',
            name='create_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_creditclass_CREATE_USER', to='api.userprofile'),
        ),
        migrations.AddField(
            model_name='creditclass',
            name='update_timestamp',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='creditclass',
            name='update_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_creditclass_UPDATE_USER', to='api.userprofile'),
        ),
        migrations.AddField(
            model_name='credittransactiontype',
            name='create_timestamp',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='credittransactiontype',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='credittransactiontype',
            name='update_timestamp',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='credittransactiontype',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.AlterModelTable(
            name='creditclass',
            table='credit_class_code',
        ),
        migrations.RenameField(
            model_name='vehiclechangehistory',
            old_name='vehicle_fuel_type_id',
            new_name='vehicle_zev_type_id',
        ),
        migrations.CreateModel(
            name='ZevType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(db_column='description', max_length=250)),
                ('vehicle_zev_code', models.CharField(max_length=4, unique=True)),
                ('create_user_id', models.IntegerField(null=True)),
                ('update_user_id', models.IntegerField(null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_user', models.CharField(max_length=130, null=True)),
            ],
            options={
                'db_table': 'vehicle_zev_type',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_zev_type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.zevtype'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='vehicle',
            unique_together={('make', 'model_name', 'vehicle_zev_type', 'model_year')},
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='vehicle_fuel_type',
        ),
        migrations.DeleteModel(
            name='FuelType',
        ),
        migrations.AlterModelOptions(
            name='recordofsale',
            options={'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='IcbcVehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('model_name', models.CharField(max_length=250)),
                ('create_user_id', models.IntegerField(null=True)),
                ('make', models.CharField(max_length=250)),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('update_user_id', models.IntegerField(null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_user', models.CharField(max_length=130, null=True)),
            ],
            options={
                'db_table': 'icbc_vehicle',
                'unique_together': {('make', 'model_name', 'model_year')},
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='IcbcRegistrationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('vin', models.CharField(max_length=20, unique=True)),
                ('create_user_id', models.IntegerField(null=True)),
                ('update_user_id', models.IntegerField(null=True)),
                ('icbc_vehicle', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='api.icbcvehicle')),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_user', models.CharField(max_length=130, null=True)),
            ],
            options={
                'db_table': 'icbc_registration_data',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='keycloak_email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='title',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='username',
            field=models.CharField(max_length=130, unique=True),
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='vehicle_class_code',
        ),
        migrations.RemoveField(
            model_name='vehicleclass',
            name='create_user',
        ),
        migrations.RemoveField(
            model_name='vehicleclass',
            name='update_user',
        ),
        migrations.RemoveField(
            model_name='vehiclemakeorganization',
            name='create_user',
        ),
        migrations.RemoveField(
            model_name='vehiclemakeorganization',
            name='organization',
        ),
        migrations.RemoveField(
            model_name='vehiclemakeorganization',
            name='update_user',
        ),
        migrations.RemoveField(
            model_name='vehiclemakeorganization',
            name='vehicle_make',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='make_id',
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='make',
            field=models.CharField(max_length=250, unique=True),
        ),
        migrations.DeleteModel(
            name='Make',
        ),
        migrations.DeleteModel(
            name='VehicleClass',
        ),
        migrations.DeleteModel(
            name='VehicleMakeOrganization',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='vehicle_class_code_id',
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='make',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='make',
            field=models.CharField(max_length=250),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('permission_code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('create_user_id', models.IntegerField(null=True)),
                ('update_user_id', models.IntegerField(null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_user', models.CharField(max_length=130, null=True)),
            ],
            options={
                'db_table': 'permission',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('role_code', models.CharField(max_length=200, unique=True)),
                ('description', models.CharField(max_length=1000)),
                ('is_government_role', models.BooleanField(default=False)),
                ('display_order', models.IntegerField()),
                ('default_role', models.BooleanField(default=False)),
                ('create_user_id', models.IntegerField(null=True)),
                ('update_user_id', models.IntegerField(null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_user', models.CharField(max_length=130, null=True)),
            ],
            options={
                'db_table': 'role',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='vehicle_class_code_id',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='VehicleClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(db_column='description', max_length=250)),
                ('vehicle_class_code', models.CharField(max_length=3, unique=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_user', models.CharField(max_length=130, null=True)),
            ],
            options={
                'db_table': 'vehicle_class_code',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_class_code',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.vehicleclass'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehicle',
            name='weight_kg',
            field=models.DecimalField(decimal_places=0, default=1000, max_digits=6),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='weight_kg',
            field=models.DecimalField(decimal_places=0, default=1000, max_digits=6),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehicle',
            name='organization',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='api.organization'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='organization_id',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.RenameField(
            model_name='userprofile',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='userprofile',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='creditclass',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='creditclass',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.AlterField(
            model_name='creditclass',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='creditclass',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='creditclass',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='credittransaction',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='credittransaction',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='credittransaction',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='credittransaction',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='modelyear',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='modelyear',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='modelyear',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='modelyear',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='organization',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='organization',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='organization',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='organization',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='organizationaddress',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='organizationaddress',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='organizationaddress',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='organizationaddress',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='recordofsale',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='recordofsale',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='recordofsale',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='recordofsale',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='salessubmission',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='salessubmission',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='salessubmission',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='salessubmission',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='usercreationrequest',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='usercreationrequest',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='usercreationrequest',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='usercreationrequest',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='vehicle',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='vehicle',
            old_name='update_user',
            new_name='update_user_id',
        ),
        migrations.AlterField(
            model_name='vehicle',
            name='update_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.RenameField(
            model_name='vehiclechangehistory',
            old_name='create_user',
            new_name='create_user_id',
        ),
        migrations.AlterField(
            model_name='vehiclechangehistory',
            name='create_user_id',
            field=models.IntegerField(null=True),
        ),
        migrations.AddField(
            model_name='creditclass',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='creditclass',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='credittransaction',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='credittransaction',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='credittransactiontype',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='credittransactiontype',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='modelyear',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='modelyear',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='organization',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='organization',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='organizationaddress',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='organizationaddress',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='recordofsale',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='recordofsale',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('create_user_id', models.IntegerField(null=True)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='api.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_permissions', to='api.role')),
                ('update_user_id', models.IntegerField(null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_user', models.CharField(max_length=130, null=True)),
            ],
            options={
                'db_table': 'role_permission',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='salessubmission',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='salessubmission',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='usercreationrequest',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='usercreationrequest',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('create_user_id', models.IntegerField(null=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='api.role')),
                ('update_user_id', models.IntegerField(null=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='api.userprofile')),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_user', models.CharField(max_length=130, null=True)),
            ],
            options={
                'db_table': 'user_role',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='update_user',
            field=models.CharField(max_length=130, null=True),
        ),
        migrations.AddField(
            model_name='vehiclechangehistory',
            name='create_user',
            field=models.CharField(default='SYSTEM', max_length=130),
        ),
        migrations.RunPython(
            code=convert_id_to_user,
            reverse_code=do_nothing,
        ),
        migrations.RunPython(
            code=do_nothing,
            reverse_code=convert_user_to_id,
        ),
        migrations.RemoveField(
            model_name='creditclass',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='creditclass',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='credittransaction',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='credittransaction',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='credittransactiontype',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='credittransactiontype',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='icbcregistrationdata',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='icbcregistrationdata',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='icbcvehicle',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='icbcvehicle',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='modelyear',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='modelyear',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='organization',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='organization',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='organizationaddress',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='organizationaddress',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='permission',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='permission',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='recordofsale',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='recordofsale',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='role',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='role',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='rolepermission',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='rolepermission',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='salessubmission',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='salessubmission',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='usercreationrequest',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='usercreationrequest',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='userrole',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='userrole',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='update_user_id',
        ),
        migrations.RemoveField(
            model_name='vehiclechangehistory',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='zevtype',
            name='create_user_id',
        ),
        migrations.RemoveField(
            model_name='zevtype',
            name='update_user_id',
        ),
        migrations.CreateModel(
            name='FixtureMigration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fixture_filename', models.CharField(max_length=255)),
                ('applied', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'fixture_migrations',
            },
        ),
        migrations.CreateModel(
            name='IcbcUploadDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('upload_date', models.DateField()),
                ('filename', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'icbc_upload_date',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='icbcregistrationdata',
            name='icbc_upload_date',
            field=models.ForeignKey(default='20200529', on_delete=django.db.models.deletion.CASCADE, to='api.icbcuploaddate'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='VehicleAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('filename', models.CharField(max_length=260)),
                ('minio_object_name', models.CharField(max_length=32)),
                ('size', models.BigIntegerField(default=0)),
                ('mime_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_removed', models.BooleanField(default=False)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_attachments', to='api.vehicle')),
            ],
            options={
                'db_table': 'vehicle_file_attachment',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.RemoveField(
            model_name='credittransaction',
            name='credit_class',
        ),
        migrations.RemoveField(
            model_name='credittransaction',
            name='transaction_type',
        ),
        migrations.RemoveField(
            model_name='vehicle',
            name='credit_class',
        ),
        migrations.AlterField(
            model_name='creditclass',
            name='credit_class',
            field=models.CharField(max_length=3, unique=True),
        ),
        migrations.AlterField(
            model_name='credittransactiontype',
            name='transaction_type',
            field=models.CharField(max_length=20, unique=True),
        ),
        migrations.AddField(
            model_name='creditclass',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='credittransactiontype',
            name='id',
            field=models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='AccountBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('credit_transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.credittransaction')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.organization')),
                ('credit_class', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.creditclass')),
            ],
            options={
                'db_table': 'account_balance',
                'managed': True,
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='credittransaction',
            name='credit_class',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.creditclass'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='credittransaction',
            name='transaction_type',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.credittransactiontype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehicle',
            name='credit_class',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.creditclass'),
        ),
        migrations.CreateModel(
            name='WeightClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('weight_class_code', models.CharField(max_length=3, unique=True)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'weight_class_code',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='credittransaction',
            name='model_year',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='api.modelyear'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='credittransaction',
            name='weight_class',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.weightclass'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='VehicleComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('comment', models.CharField(blank=True, db_column='vehicle_comment', max_length=4000, null=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_comments', to='api.vehicle')),
            ],
            options={
                'db_table': 'vehicle_comment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SalesSubmissionContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('xls_make', models.CharField(blank=True, max_length=255, null=True)),
                ('xls_model', models.CharField(blank=True, max_length=255, null=True)),
                ('xls_model_year', models.CharField(blank=True, max_length=255, null=True)),
                ('xls_sale_date', models.CharField(blank=True, max_length=255, null=True)),
                ('xls_vin', models.CharField(blank=True, max_length=255, null=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api.salessubmission')),
                ('xls_date_mode', models.PositiveSmallIntegerField(default=1)),
                ('xls_date_type', models.PositiveSmallIntegerField(default=3)),
            ],
            options={
                'db_table': 'sale_submission_content',
                'ordering': ['id'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AlterModelTable(
            name='salessubmissioncontent',
            table='sales_submission_content',
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('address_type', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'address_type',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='organizationaddress',
            name='address_type',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.addresstype'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehicle',
            name='has_passed_us_06_test',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='salessubmission',
            name='validation_status',
            field=enumfields.fields.EnumField(default='DRAFT', enum=api.models.sales_submission_statuses.SalesSubmissionStatuses, max_length=20),
        ),
        migrations.AddField(
            model_name='credittransaction',
            name='number_of_credits',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='credittransaction',
            name='total_value',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=20),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='CreditTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.credit_transfer_statuses.CreditTransferStatuses, max_length=20)),
                ('credit_to', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.organization')),
                ('debit_from', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.organization')),
            ],
            options={
                'db_table': 'credit_transfer',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SalesSubmissionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('comment', models.CharField(blank=True, db_column='sales_submission_comment', max_length=4000, null=True)),
                ('sales_submission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_submission_comments', to='api.salessubmission')),
                ('to_govt', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'sales_submission_comment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditTransferContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_transfer_content', to='api.credittransfer')),
                ('credit_class', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.creditclass')),
                ('credit_value', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('dollar_value', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('model_year', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('weight_class', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.weightclass')),
            ],
            options={
                'db_table': 'credit_transfer_content',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SalesSubmissionCreditTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_submission_credit_transaction', to='api.credittransaction')),
                ('sales_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_submission_credit_transaction', to='api.salessubmission')),
            ],
            options={
                'db_table': 'sales_submission_credit_transaction',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditTransferCreditTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_transfer_credit_transaction', to='api.credittransaction')),
                ('credit_transfer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_transfer_credit_transaction', to='api.credittransfer')),
            ],
            options={
                'db_table': 'credit_transfer_credit_transaction',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='salessubmission',
            name='filename',
            field=models.CharField(blank=True, max_length=260, null=True),
        ),
        migrations.CreateModel(
            name='SalesSubmissionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('validation_status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.sales_submission_statuses.SalesSubmissionStatuses, max_length=20)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='history', to='api.salessubmission')),
            ],
            options={
                'db_table': 'sales_submission_history',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='organizationaddress',
            name='representative_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='CreditTransferHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.credit_transfer_statuses.CreditTransferStatuses, max_length=20)),
                ('transfer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='history', to='api.credittransfer')),
            ],
            options={
                'db_table': 'credit_transfer_history',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SigningAuthorityAssertion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('display_order', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=4000, null=True)),
                ('module', models.CharField(choices=[(api.models.signing_authority_assertion.SigningAuthorityAssertion.AssertionModules['CREDIT_TRANSFER'], 'CREDIT_TRANSFER')], default='credit_transfer', max_length=50)),
            ],
            options={
                'db_table': 'signing_authority_assertion',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SigningAuthorityConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('has_accepted', models.BooleanField()),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('credit_transfer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='confirmations', to='api.credittransfer')),
                ('signing_authority_assertion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='confirmations', to='api.signingauthorityassertion')),
            ],
            options={
                'db_table': 'signing_authority_confirmation',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AlterField(
            model_name='icbcregistrationdata',
            name='vin',
            field=models.CharField(db_index=True, max_length=20, unique=True),
        ),
        migrations.AlterField(
            model_name='icbcvehicle',
            name='make',
            field=models.CharField(db_index=True, max_length=250),
        ),
        migrations.AlterField(
            model_name='icbcvehicle',
            name='model_name',
            field=models.CharField(db_index=True, max_length=250),
        ),
        migrations.AlterField(
            model_name='salessubmissioncontent',
            name='xls_make',
            field=models.CharField(blank=True, db_index=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='salessubmissioncontent',
            name='xls_model',
            field=models.CharField(blank=True, db_index=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='salessubmissioncontent',
            name='xls_model_year',
            field=models.CharField(blank=True, db_index=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='salessubmissioncontent',
            name='xls_vin',
            field=models.CharField(blank=True, db_index=True, max_length=255, null=True),
        ),
        migrations.AlterIndexTogether(
            name='icbcvehicle',
            index_together={('make', 'model_name', 'model_year')},
        ),
        migrations.CreateModel(
            name='CreditTransferComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('comment', models.CharField(blank=True, db_column='credit_transfer_comment', max_length=4000, null=True)),
                ('credit_transfer_history', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, related_name='credit_transfer_comments', to='api.credittransferhistory')),
            ],
            options={
                'db_table': 'credit_transfer_comment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('notification_code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.permission')),
            ],
            options={
                'db_table': 'notification',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='NotificationSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_subscriptions', to='api.notification')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_subscriptions', to='api.userprofile')),
            ],
            options={
                'db_table': 'notification_subscription',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SalesEvidence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('filename', models.CharField(max_length=260)),
                ('minio_object_name', models.CharField(max_length=32)),
                ('size', models.BigIntegerField(default=0)),
                ('mime_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_removed', models.BooleanField(default=False)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales_evidence', to='api.salessubmission')),
            ],
            options={
                'db_table': 'sale_submission_file_attachment',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AlterModelTable(
            name='salesevidence',
            table='sales_submission_evidence',
        ),
        migrations.CreateModel(
            name='ComplianceRatio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('model_year', models.CharField(max_length=250)),
                ('compliance_ratio', models.DecimalField(decimal_places=2, max_digits=20)),
                ('zev_class_a', models.DecimalField(decimal_places=2, max_digits=20)),
            ],
            options={
                'db_table': 'compliance_ratio',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('organization_name', models.CharField(max_length=500)),
                ('supplier_class', models.CharField(max_length=1, null=True)),
                ('validation_status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.model_year_report_statuses.ModelYearReportStatuses, max_length=20)),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('organization', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='api.organization')),
                ('credit_reduction_selection', models.CharField(max_length=1, null=True)),
            ],
            options={
                'db_table': 'model_year_report',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('validation_status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.model_year_report_statuses.ModelYearReportStatuses, max_length=20)),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_history', to='api.modelyearreport')),
            ],
            options={
                'db_table': 'model_year_report_history',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('has_accepted', models.BooleanField()),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('model_year_report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='model_year_report_confirmations', to='api.modelyearreport')),
                ('signing_authority_assertion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_confirmations', to='api.signingauthorityassertion')),
            ],
            options={
                'db_table': 'model_year_report_confirmation',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('representative_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address_line_1', models.CharField(blank=True, max_length=500, null=True)),
                ('address_line_2', models.CharField(blank=True, max_length=100, null=True)),
                ('address_line_3', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('other', models.CharField(blank=True, max_length=100, null=True)),
                ('address_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.addresstype')),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_addresses', to='api.modelyearreport')),
            ],
            options={
                'db_table': 'model_year_report_address',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportVehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('pending_sales', models.IntegerField()),
                ('sales_issued', models.IntegerField()),
                ('make', models.CharField(max_length=250)),
                ('model_name', models.CharField(max_length=250)),
                ('range', models.DecimalField(decimal_places=2, max_digits=20)),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('zev_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.creditclass')),
                ('vehicle_zev_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.zevtype')),
                ('model_year_report', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='api.modelyearreport')),
            ],
            options={
                'db_table': 'model_year_report_vehicle',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.CreateModel(
            name='SalesSubmissionContentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('reason', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'sales_submission_content_reason',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='salessubmissioncontent',
            name='reason',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='ModelYearReportCreditOffset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_a_offset_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('credit_b_offset_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='model_year_report_credit_offset', to='api.modelyearreport')),
            ],
            options={
                'db_table': 'model_year_report_credit_offset',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportComplianceObligation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_a_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('credit_b_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='model_year_report_compliance_obligation', to='api.modelyearreport')),
                ('from_gov', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'model_year_report_compliance_obligation',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportMake',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('make', models.CharField(max_length=250)),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_makes', to='api.modelyearreport')),
                ('from_gov', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'model_year_report_make',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportAdjustment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('number_of_credits', models.IntegerField()),
                ('is_reduction', models.BooleanField(default=False)),
                ('credit_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_adjustments', to='api.creditclass')),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_adjustments', to='api.modelyear')),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_adjustments', to='api.modelyearreport')),
            ],
            options={
                'db_table': 'model_year_report_adjustment',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportLDVSales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('ldv_sales', models.IntegerField()),
                ('from_gov', models.BooleanField(default=False)),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyearreport')),
            ],
            options={
                'db_table': 'model_year_report_ldv_sales',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportAssessmentDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('description', models.CharField(blank=True, db_column='assessment_description', max_length=4000, null=True)),
                ('display_order', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'model_year_report_assessment_descriptions',
                'ordering': ['display_order'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportAssessmentComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('to_director', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, db_column='assessment_comment', max_length=4000, null=True)),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_assessment_comments', to='api.modelyearreport')),
            ],
            options={
                'db_table': 'model_year_report_assessment_comment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('penalty', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='model_year_report_assessment', to='api.modelyearreport')),
                ('model_year_report_assessment_description', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.modelyearreportassessmentdescriptions')),
            ],
            options={
                'db_table': 'model_year_report_assessment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='OrganizationLDVSales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('ldv_sales', models.IntegerField()),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.organization')),
            ],
            options={
                'db_table': 'organization_ldv_sales',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYearReportCreditTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_year_report_credit_transaction', to='api.credittransaction')),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_year_report_credit_transaction', to='api.modelyearreport')),
            ],
            options={
                'db_table': 'model_year_report_credit_transaction',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='OrganizationDeficits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('credit_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.creditclass')),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.organization')),
            ],
            options={
                'db_table': 'organization_deficits',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('transaction_type', enumfields.fields.EnumField(default='Initiative Agreement', enum=api.models.credit_agreement_transaction_types.CreditAgreementTransactionTypes, max_length=50)),
                ('status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.credit_agreement_statuses.CreditAgreementStatuses, max_length=20)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.organization')),
                ('optional_agreement_id', models.CharField(blank=True, max_length=20, null=True)),
                ('model_year_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='credit_agreement', to='api.modelyearreport')),
            ],
            options={
                'db_table': 'credit_agreement',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditAgreementHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.credit_agreement_statuses.CreditAgreementStatuses, max_length=20)),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_history', to='api.creditagreement')),
            ],
            options={
                'db_table': 'credit_agreement_history',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditAgreementComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('to_director', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, max_length=4000, null=True)),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_comment', to='api.creditagreement')),
            ],
            options={
                'db_table': 'credit_agreement_comment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditAgreementAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('filename', models.CharField(max_length=260)),
                ('minio_object_name', models.CharField(max_length=32)),
                ('size', models.BigIntegerField(default=0)),
                ('mime_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_removed', models.BooleanField(default=False)),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_attachment', to='api.creditagreement')),
            ],
            options={
                'db_table': 'credit_agreement_file_attachment',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AlterField(
            model_name='credittransactiontype',
            name='transaction_type',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.CreateModel(
            name='CreditAgreementCreditTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_agreement_credit_transaction', to='api.creditagreement')),
                ('credit_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_agreement_credit_transaction', to='api.credittransaction')),
            ],
            options={
                'db_table': 'credit_agreement_credit_transaction',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AlterField(
            model_name='credittransaction',
            name='transaction_timestamp',
            field=models.DateTimeField(default=datetime.datetime.now),
        ),
        migrations.CreateModel(
            name='SupplementalReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.model_year_report_statuses.ModelYearReportStatuses, max_length=20)),
                ('model_year_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_report', to='api.modelyearreport')),
                ('ldv_sales', models.IntegerField(null=True)),
                ('supplemental_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'supplemental_report',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SupplementalReportSupplierInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('category', models.CharField(blank=True, max_length=250, null=True)),
                ('value', models.CharField(blank=True, max_length=500, null=True)),
                ('supplemental_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_report_supplier_information', to='api.supplementalreport')),
            ],
            options={
                'db_table': 'supplemental_report_supplier_information',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SupplementalReportCreditActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('credit_a_value', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('credit_b_value', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('model_year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.modelyear')),
                ('supplemental_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_report_credit_activity', to='api.supplementalreport')),
            ],
            options={
                'db_table': 'supplemental_report_credit_activity',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SupplementalReportAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('filename', models.CharField(max_length=260)),
                ('minio_object_name', models.CharField(max_length=32)),
                ('size', models.BigIntegerField(default=0)),
                ('mime_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_removed', models.BooleanField(default=False)),
                ('supplemental_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_report_file_attachment', to='api.supplementalreport')),
            ],
            options={
                'db_table': 'supplemental_report_file_attachment',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SupplementalReportComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('to_govt', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, max_length=4000, null=True)),
                ('supplemental_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_report_comment', to='api.supplementalreport')),
            ],
            options={
                'db_table': 'supplemental_report_comment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SupplementalReportAssessmentComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('to_director', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, db_column='assessment_comment', max_length=4000, null=True)),
                ('supplemental_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_report_assessment_comments', to='api.supplementalreport')),
            ],
            options={
                'db_table': 'supplemental_report_assessment_comment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SupplementalReportAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('penalty', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('supplemental_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_assessment', to='api.supplementalreport')),
                ('supplemental_report_assessment_description', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='api.modelyearreportassessmentdescriptions')),
            ],
            options={
                'db_table': 'supplemental_report_assessment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SupplementalReportHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('validation_status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.model_year_report_statuses.ModelYearReportStatuses, max_length=20)),
                ('supplemental_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_report_history', to='api.supplementalreport')),
            ],
            options={
                'db_table': 'supplemental_report_history',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='IcbcSnapshotData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('vin', models.CharField(db_index=True, max_length=20)),
                ('make', models.CharField(db_index=True, max_length=250)),
                ('model_name', models.CharField(db_index=True, max_length=250)),
                ('model_year', models.CharField(max_length=250)),
                ('upload_date', models.DateField()),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icbc_snapshot', to='api.salessubmission')),
            ],
            options={
                'db_table': 'icbc_snapshot_data',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='recordofsale',
            name='icbc_snapshot',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='api.icbcsnapshotdata'),
        ),
        migrations.AddField(
            model_name='salessubmission',
            name='part_of_model_year_report',
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.CreateModel(
            name='CreditAgreementContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('number_of_credits', models.DecimalField(decimal_places=2, max_digits=20)),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_content', to='api.creditagreement')),
                ('credit_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_content', to='api.creditclass')),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_content', to='api.modelyear')),
            ],
            options={
                'db_table': 'credit_agreement_content',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='SupplementalReportSales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('sales', models.IntegerField(blank=True, null=True)),
                ('make', models.CharField(blank=True, max_length=250, null=True)),
                ('model_name', models.CharField(blank=True, max_length=250, null=True)),
                ('range', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('model_year', models.CharField(blank=True, max_length=4, null=True)),
                ('model_year_report_vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.modelyearreportvehicle')),
                ('supplemental_report', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplemental_report_sales', to='api.supplementalreport')),
                ('vehicle_zev_type', models.CharField(blank=True, max_length=4, null=True)),
                ('zev_class', models.CharField(blank=True, max_length=3, null=True)),
                ('supplemental_origin_zev_sale_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'supplemental_report_sales',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='keycloak_user_id',
            field=models.CharField(blank=True, max_length=150, null=True),
        ),
    ]
