# Generated by Django 3.0.7 on 2021-07-08 19:12

import api.models.credit_agreement_statuses
import api.models.credit_agreement_transaction_types
import db_comments.model_mixins
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0110_organizationdeficits'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('transaction_type', enumfields.fields.EnumField(default='Initiative Agreement', enum=api.models.credit_agreement_transaction_types.CreditAgreementTransactionTypes, max_length=50)),
                ('status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.credit_agreement_statuses.CreditAgreementStatuses, max_length=20)),
                ('effective_date', models.DateField(auto_now_add=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Organization')),
            ],
            options={
                'db_table': 'credit_agreement',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditAgreementHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('status', enumfields.fields.EnumField(default='DRAFT', enum=api.models.credit_agreement_statuses.CreditAgreementStatuses, max_length=20)),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_history', to='api.CreditAgreement')),
            ],
            options={
                'db_table': 'credit_agreement_history',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditAgreementContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('number_of_credits', models.IntegerField()),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_content', to='api.CreditAgreement')),
                ('credit_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_content', to='api.CreditClass')),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_content', to='api.ModelYear')),
            ],
            options={
                'db_table': 'credit_agreement_content',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditAgreementComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('to_director', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, max_length=4000, null=True)),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_comment', to='api.CreditAgreement')),
            ],
            options={
                'db_table': 'credit_agreement_comment',
                'ordering': ['create_timestamp'],
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='CreditAgreementAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('create_user', models.CharField(default='SYSTEM', max_length=130)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('update_user', models.CharField(max_length=130, null=True)),
                ('filename', models.CharField(max_length=260)),
                ('minio_object_name', models.CharField(max_length=32)),
                ('size', models.BigIntegerField(default=0)),
                ('mime_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_removed', models.BooleanField(default=False)),
                ('credit_agreement', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_agreement_attachment', to='api.CreditAgreement')),
            ],
            options={
                'db_table': 'credit_agreement_file_attachment',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
    ]
