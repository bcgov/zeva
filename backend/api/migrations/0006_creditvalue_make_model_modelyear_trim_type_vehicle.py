# Generated by Django 3.0.2 on 2020-01-13 10:53

import db_comments.model_mixins
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0005_auto_20200113_0612'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('a', models.DecimalField(decimal_places=3, max_digits=5, null=True)),
                ('b', models.DecimalField(decimal_places=3, max_digits=5, null=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_creditvalue_CREATE_USER', to='api.UserProfile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_creditvalue_UPDATE_USER', to='api.UserProfile')),
            ],
            options={
                'db_table': 'credits',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=250)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_make_CREATE_USER', to='api.UserProfile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_make_UPDATE_USER', to='api.UserProfile')),
            ],
            options={
                'db_table': 'make',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=250)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_model_CREATE_USER', to='api.UserProfile')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='valid_models', to='api.Make')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_model_UPDATE_USER', to='api.UserProfile')),
            ],
            options={
                'db_table': 'model',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='ModelYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_modelyear_CREATE_USER', to='api.UserProfile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_modelyear_UPDATE_USER', to='api.UserProfile')),
            ],
            options={
                'db_table': 'model_year',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Trim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=250)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_trim_CREATE_USER', to='api.UserProfile')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='valid_trims', to='api.Model')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_trim_UPDATE_USER', to='api.UserProfile')),
            ],
            options={
                'db_table': 'trim',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=250)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_type_CREATE_USER', to='api.UserProfile')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_type_UPDATE_USER', to='api.UserProfile')),
            ],
            options={
                'db_table': 'type',
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('range', models.IntegerField()),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehicle_CREATE_USER', to='api.UserProfile')),
                ('credit_value', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.CreditValue')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Make')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Model')),
                ('model_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ModelYear')),
                ('trim', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Trim')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_vehicle_UPDATE_USER', to='api.UserProfile')),
            ],
            options={
                'db_table': 'vehicle',
                'unique_together': {('make', 'model', 'trim', 'model_year')},
            },
            bases=(models.Model, db_comments.model_mixins.DBComments),
        ),
    ]
